<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->

	<resources mapping="/js/**" location="/resources/js" />
	<resources mapping="/img/**" location="/resources/img/"/>
	<resources mapping="/images/**" location="/resources/images/"/>
	<resources mapping="/css/**" location="/resources/css/"/>
	<resources mapping="/imgUpload/**" location="/resources/imgUpload/" />
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.bcgbcg.br" />
	
	
	<beans:bean name="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="james"/>
		<beans:property name="password" value="bond"/>
	</beans:bean>
	<beans:bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="mapperLocations" value="classpath:com/bcgbcg/br/dao/mapper/*.xml"/>
	</beans:bean>
	<beans:bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>
 	
 	
	 <!-- 업로드 패스 설정 -->
  <beans:bean class="java.lang.String" id="uploadPath">
      <beans:constructor-arg
          value="D:\Spring\SPRINGworkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\Project_BR\resources" />
	</beans:bean>

   <beans:bean
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
      id="multipartResolver">
      <beans:property name="maxUploadSize" value="10485760" />
   </beans:bean>  


<!-- 메일 인증 추가 -->
<!-- mailSender -->
	<!-- 보내는 메일은 gmail 전용입니다. -->
	<!-- 구글에 본인 계정으로 로그인을 하고, 보안 수준이 낮은 앱 및 Google 계정을 해야 한다.(보안 수준이 낮은 앱의 액세스를 허용해야 보낼 수 있다.) -->
	<!-- 보낼사람구글아이디와 비번은 본인의 실제 아이디와 비번을 사용합니다. -->
	<beans:bean name="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="" />
		<beans:property name="password" value="" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
</beans:beans>
